"""
EXEMPLO DE CONFIGURA√á√ÉO PARA M√öLTIPLAS CONTAS DERIV
===================================================

Este arquivo mostra como configurar m√∫ltiplas contas no tunderbotalavanca.py
para contornar a limita√ß√£o de apenas 1 contrato acumulador por conta.

CONFIGURA√á√ÉO ATUAL:
==================
Sua conta principal j√° est√° configurada com:
- Token: 5iD3wgrYUz39kzS
- App ID: 105327

COMO ADICIONAR MAIS CONTAS:
==========================

1. No arquivo tunderbotalavanca.py, localize a se√ß√£o ACCOUNTS (linha ~64)

2. Substitua os tokens placeholder pelas suas contas reais:

ACCOUNTS = [
    {
        "name": "Bot_Principal",
        "token": "5iD3wgrYUz39kzS",  # Sua conta atual
        "app_id": "105327"
    },
    {
        "name": "Bot_Secundario",
        "token": "SEU_SEGUNDO_TOKEN_AQUI",  # Adicione seu segundo token
        "app_id": "105327"  # Ou use app_id diferente se necess√°rio
    },
    {
        "name": "Bot_Terciario", 
        "token": "SEU_TERCEIRO_TOKEN_AQUI",  # Adicione seu terceiro token
        "app_id": "105327"
    }
]

3. Para ativar m√∫ltiplas contas, modifique ACTIVE_ACCOUNTS:

# Para usar apenas a conta principal (configura√ß√£o atual):
ACTIVE_ACCOUNTS = [ACCOUNTS[0]]

# Para usar 2 contas:
ACTIVE_ACCOUNTS = [ACCOUNTS[0], ACCOUNTS[1]]

# Para usar todas as 3 contas:
ACTIVE_ACCOUNTS = ACCOUNTS

COMO OBTER NOVOS TOKENS:
=======================

1. Acesse https://app.deriv.com/account/api-token
2. Crie um novo token com as permiss√µes:
   - Read
   - Trade
   - Trading information
   - Payments
3. Copie o token gerado
4. Adicione na configura√ß√£o ACCOUNTS

VANTAGENS DO SISTEMA MULTI-CONTA:
================================

‚úÖ M√∫ltiplos contratos acumuladores simult√¢neos
‚úÖ Distribui√ß√£o autom√°tica de opera√ß√µes entre contas
‚úÖ Logs separados por conta para melhor rastreamento
‚úÖ Estat√≠sticas combinadas de todas as contas
‚úÖ Sistema de failover autom√°tico
‚úÖ Gerenciamento centralizado via um √∫nico script

EXEMPLO DE EXECU√á√ÉO:
===================

Quando voc√™ executar o bot com m√∫ltiplas contas ativas, ver√° logs como:

üè¶ MultiAccountManager inicializado com 3 contas
ü§ñ Inicializando bot para conta: Bot_Principal
‚úÖ Bot inicializado para conta Bot_Principal
ü§ñ Inicializando bot para conta: Bot_Secundario
‚úÖ Bot inicializado para conta Bot_Secundario
üéØ Total de bots ativos: 2
üöÄ Iniciando 2 bots simultaneamente...
üìä Distribuindo opera√ß√£o para conta: Bot_Principal
üìä Distribuindo opera√ß√£o para conta: Bot_Secundario

IMPORTANTE:
===========

- Cada conta deve ter saldo suficiente para as opera√ß√µes
- Monitore os logs para verificar se todas as contas est√£o funcionando
- O sistema distribui opera√ß√µes em round-robin entre as contas ativas
- Voc√™ pode parar e reiniciar o bot a qualquer momento

"""

# Teste r√°pido da configura√ß√£o atual
if __name__ == "__main__":
    try:
        from tunderbotalavanca import ACCOUNTS, ACTIVE_ACCOUNTS
        
        print("üîç CONFIGURA√á√ÉO ATUAL:")
        print(f"üìä Total de contas configuradas: {len(ACCOUNTS)}")
        print(f"üéØ Contas ativas: {len(ACTIVE_ACCOUNTS)}")
        
        print("\nüìã DETALHES DAS CONTAS:")
        for i, account in enumerate(ACCOUNTS):
            status = "‚úÖ ATIVA" if account in ACTIVE_ACCOUNTS else "‚è∏Ô∏è INATIVA"
            token_preview = account['token'][:10] + "..." if not account['token'].startswith('SEU_TOKEN_') else "‚ùå TOKEN PLACEHOLDER"
            print(f"  {i+1}. {account['name']}: {status}")
            print(f"     Token: {token_preview}")
            print(f"     App ID: {account['app_id']}")
        
        print(f"\nüöÄ Para executar o bot: python tunderbotalavanca.py")
        
    except ImportError as e:
        print(f"‚ùå Erro ao importar configura√ß√µes: {e}")
        print("Certifique-se de que o arquivo tunderbotalavanca.py est√° no mesmo diret√≥rio")